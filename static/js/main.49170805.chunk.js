(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{15:function(t,e,i){},16:function(t,e,i){},17:function(t,e,i){"use strict";i.r(e);var s=i(0),a=i.n(s),r=i(3),o=i.n(r),n=i(4),h=i(5),l=i(7),c=i(6),p=i(1),d=i(8),b=(i(15),[[[0,0,0,0],[1,1,1,1],[0,0,0,0],[0,0,0,0]],[[0,0,0],[1,1,1],[0,0,1]],[[0,0,0],[1,1,1],[1,0,0]],[[0,0,0,0],[0,1,1,0],[0,1,1,0],[0,0,0,0]],[[0,0,0],[0,1,1],[1,1,0]],[[0,0,0],[1,1,1],[0,1,0]],[[0,0,0],[1,1,0],[0,1,1]]]),v=function(t){function e(t){var i;Object(n.a)(this,e),(i=Object(l.a)(this,Object(c.a)(e).call(this,t))).state={block:[[0]],x:0,y:0,on:"init"},i.table=new Array(i.props.boardSize);for(var s=0;s<i.props.boardSize;++s)i.table[s]=new Array(i.props.boardSize);return i.checkMove=i.checkMove.bind(Object(p.a)(i)),i.moveLeft=i.moveLeft.bind(Object(p.a)(i)),i.moveRight=i.moveRight.bind(Object(p.a)(i)),i.fall=i.fall.bind(Object(p.a)(i)),i.isValid=i.isValid.bind(Object(p.a)(i)),i.rotateLeft=i.rotateLeft.bind(Object(p.a)(i)),i.awaitEnter=i.awaitEnter.bind(Object(p.a)(i)),i.start=i.start.bind(Object(p.a)(i)),i.over=i.over.bind(Object(p.a)(i)),i.pause=i.pause.bind(Object(p.a)(i)),i.unpause=i.unpause.bind(Object(p.a)(i)),i.renderUserInterface=i.renderUserInterface.bind(Object(p.a)(i)),i}return Object(d.a)(e,t),Object(h.a)(e,[{key:"componentWillMount",value:function(){window.addEventListener("keydown",this.awaitEnter)}},{key:"componentWillUnmount",value:function(){window.removeEventListener("keydown",this.awaitEnter),"playing"===this.state.on&&(window.removeEventListener("keydown",this.checkMove),clearInterval(this.fallInterval))}},{key:"awaitEnter",value:function(t){"Enter"===t.code&&("init"===this.state.on?this.start():"playing"===this.state.on?this.pause():"pause"===this.state.on?this.unpause():"over"===this.state.on&&this.start())}},{key:"start",value:function(){this.score=0;for(var t=0;t<this.props.boardSize;++t)this.table[t].fill(!1);var e=Math.floor(Math.random()*b.length);this.setState({x:Math.floor(this.props.boardSize/2)-Math.ceil(b[e].length/2),y:-1,block:b[e],on:"playing"}),window.addEventListener("keydown",this.checkMove),this.fallInterval=setInterval(this.fall,500)}},{key:"over",value:function(){this.setState({block:[[0]],x:0,y:0,on:"over"}),window.removeEventListener("keydown",this.checkMove),clearInterval(this.fallInterval)}},{key:"pause",value:function(){this.setState({on:"pause"}),window.removeEventListener("keydown",this.checkMove),clearInterval(this.fallInterval)}},{key:"unpause",value:function(){this.setState({on:"playing"}),window.addEventListener("keydown",this.checkMove),this.fallInterval=setInterval(this.fall,500)}},{key:"checkMove",value:function(t){"ArrowDown"===t.code?this.fall():"ArrowLeft"===t.code?this.moveLeft():"ArrowRight"===t.code?this.moveRight():"KeyA"===t.code?this.rotateLeft():"KeyD"===t.code&&this.rotateRight()}},{key:"moveLeft",value:function(){new Audio("/tetris-react/pop.mp3").play(),this.isValid(this.state.block,this.state.x-1,this.state.y)&&this.setState({x:this.state.x-1})}},{key:"moveRight",value:function(){new Audio("/tetris-react/pop.mp3").play(),this.isValid(this.state.block,this.state.x+1,this.state.y)&&this.setState({x:this.state.x+1})}},{key:"isValid",value:function(t,e,i){for(var s=t.length-1;s>=0;--s)for(var a=0;a<t.length;++a)if(t[s][a]&&(s+i>=this.props.boardSize||s+i<0||a+e>=this.props.boardSize||a+e<0||this.table[s+i][a+e]))return!1;return!0}},{key:"rotateLeft",value:function(){new Audio("/tetris-react/pop.mp3").play();for(var t=this.state.block.length,e=new Array(t),i=0;i<t;++i)e[i]=new Array(t);for(var s=0;s<t;++s)for(var a=0;a<t;++a)e[a][t-s-1]=this.state.block[s][a];this.isValid(e,this.state.x,this.state.y)?this.setState({block:e}):this.isValid(e,this.state.x-1,this.state.y)?this.setState({x:this.state.x-1,block:e}):this.isValid(e,this.state.x+1,this.state.y)&&this.setState({x:this.state.x+1,block:e})}},{key:"rotateRight",value:function(){new Audio("/tetris-react/pop.mp3").play();for(var t=this.state.block.length,e=new Array(t),i=0;i<t;++i)e[i]=new Array(t);for(var s=0;s<t;++s)for(var a=0;a<t;++a)e[t-a-1][s]=this.state.block[s][a];this.isValid(e,this.state.x,this.state.y)?this.setState({block:e}):this.isValid(e,this.state.x-1,this.state.y)?this.setState({x:this.state.x-1,block:e}):this.isValid(e,this.state.x+1,this.state.y)&&this.setState({x:this.state.x+1,block:e})}},{key:"draw",value:function(){for(var t=0;t<this.state.block.length;++t)for(var e=0;e<this.state.block.length;++e)this.state.block[t][e]&&(this.table[t+this.state.y][e+this.state.x]=!0)}},{key:"pop",value:function(){for(var t=new Array(this.table.length).fill(0),e=0,i=this.table.length-1;i>=0;--i){for(var s=!0,a=0;a<this.table.length;++a)if(!this.table[i][a]){s=!1;break}if(s){t[i]=-1;for(var r=0;r<i;++r)++t[r];e=Math.max(Math.ceil(2.5*e),100)}}for(var o=this.table.length-1;o>=0;--o)t[o]>0&&(this.table[o+t[o]]=this.table[o].slice(0));return e}},{key:"fall",value:function(){for(var t=0;t<this.state.block.length;++t)for(var e=0;e<this.state.block.length;++e)if(!this.isValid(this.state.block,this.state.x,this.state.y+1)){-1===this.state.y&&this.over(),this.draw(),this.score+=this.pop();var i=Math.floor(Math.random()*b.length);return void this.setState({x:Math.floor(this.props.boardSize/2)-Math.ceil(b[i].length/2),y:-1,block:b[i]})}this.setState({y:this.state.y+1})}},{key:"renderUserInterface",value:function(){return"init"===this.state.on?a.a.createElement("div",{id:"tetrisUserInterface",style:{width:this.props.boardSize*this.props.blockSize,height:this.props.boardSize*this.props.blockSize}},a.a.createElement("p",{className:"tetrisText"},"Press ENTER to START")):"over"===this.state.on?a.a.createElement("div",{id:"tetrisUserInterface",style:{width:this.props.boardSize*this.props.blockSize,height:this.props.boardSize*this.props.blockSize}},a.a.createElement("div",{className:"tetrisText"},a.a.createElement("p",null,"GAME OVER"),a.a.createElement("p",null,"Press ENTER to PLAY AGAIN")),a.a.createElement("p",{className:"tetrisScore"},this.score)):"pause"===this.state.on?a.a.createElement("div",{id:"tetrisUserInterface",style:{width:this.props.boardSize*this.props.blockSize,height:this.props.boardSize*this.props.blockSize}},a.a.createElement("p",{className:"tetrisText"},"Press ENTER to UNPAUSE"),a.a.createElement("p",{className:"tetrisScore"},this.score)):"playing"===this.state.on?a.a.createElement("div",{id:"tetrisUserInterface",style:{width:this.props.boardSize*this.props.blockSize,height:this.props.boardSize*this.props.blockSize}},a.a.createElement("p",{className:"tetrisScore"},this.score)):void 0}},{key:"render",value:function(){var t=this;return a.a.createElement("div",{id:"tetrisBoard",style:{width:this.props.boardSize*this.props.blockSize,height:this.props.boardSize*this.props.blockSize}},a.a.createElement("div",{id:"tetrisBoardGrid",style:{width:this.props.boardSize*this.props.blockSize,height:this.props.boardSize*this.props.blockSize}},this.table.map(function(e,i){return e.map(function(e,s){if(e)return a.a.createElement("div",{key:i.toString()+s.toString(),className:"tetrisBlock",style:{width:t.props.blockSize,height:t.props.blockSize,marginLeft:s*t.props.blockSize,marginTop:i*t.props.blockSize}})})}),this.state.block.map(function(e,i){return e.map(function(e,s){if(e)return a.a.createElement("div",{key:i.toString()+s.toString(),className:"tetrisBlock",style:{width:t.props.blockSize,height:t.props.blockSize,marginLeft:(s+t.state.x)*t.props.blockSize,marginTop:(i+t.state.y)*t.props.blockSize}})})})),this.renderUserInterface())}}]),e}(a.a.Component);i(16);o.a.render(a.a.createElement(v,{boardSize:20,blockSize:25}),document.getElementById("game"))},9:function(t,e,i){t.exports=i(17)}},[[9,1,2]]]);
//# sourceMappingURL=main.49170805.chunk.js.map